injected_current = '-300';   % The string that goes to the figures title
art_filename = 'artm300';    % The name of the file that holds the data for the artificial morphology
recon_filename = 'recm300';  % The name of the file that holds the data for the reconstructed morphology

%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\Laci\Documents\GitHub\nRT_network\NEURON\IV Art 200.dat
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2013/10/07 14:25:19

%% Initialize variables.
filename = ['C:\Users\Laci\Documents\GitHub\nRT_network\NEURON\' art_filename '.dat'];
delimiter = '\t';
startRow = 3;

%% Format string for each line of text:
%   column2: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
art = dataArray{:, 1};

%% Clear temporary variables
clearvars art_filename filename delimiter startRow formatSpec fileID dataArray ans;




%% Initialize variables.
filename = ['C:\Users\Laci\Documents\GitHub\nRT_network\NEURON\' recon_filename '.dat'];
delimiter = '\t';
startRow = 3;

%% Format string for each line of text:
%   column2: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
recon = dataArray{:, 1};

%% Clear temporary variables
clearvars recon_filename filename delimiter startRow formatSpec fileID dataArray ans;



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Plot
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Time = linspace(0, 400, size(art,1))';
figure
plot(Time,art,'Color','Red','DisplayName','Artificial morphology')
hold on
plot(Time,recon,'Color','Black','DisplayName','Reconstructed morphology')
title(['Response for ' injected_current 'pA injected current']);
xlabel('Time [ms]');
ylabel('Membrane potential [mV]');
legend('show')
